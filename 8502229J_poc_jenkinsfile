pipeline {
    agent any 
    stages {
        stage('ST1 8502229J') {
            steps {
                sh 'echo "ST1 8502229J: Environment is prepared. Start to rollout to TEST server"'
            }
        }

        stage('ST2 8502229J') {
            steps {
            sh 'rm -f BKUP-TEST-image'
            sh 'sudo -t docker commit TESTsvr8502229J bkup-test-image'
            echo "ST2 8502229J: TEST server is backup and updated"
            }
        }

        stage('ST3 8502229J') {
            steps{
                sh "curl -Is http://TESTsvr8502229J.localdomain |head -n 1 > /tmp/TEST-result-file"
                echo "ST3 8502229J: Test result for TEST server is generated: TEST-result-file"

                }
            }
            

        stage('ST4 8502229J') {
            steps {
                script {
                userInput = input ( 
                       message: 'Action',
                       parameters: [choice(name:'',choices: ['Deploy to Production Environment', 'Rollback'])]
                            )
                      

                       }
                echo "ST4 8502229J: TEST server's testing result has been inspected"
                    
                   }

       }
    

        stage('ST5 8502229J') {
            steps{
                script{

                   if (userInput == 'Rollback') {
                           echo 'Rollback Test server'
                   } else if (userInput == 'Deploy to Production Environment') {
  	                    echo "Proceed to Production Phase"
                   	  
                }
            }

        }
}


        stage('ST6 8502229J') {
           steps {
                script{

                   if (userInput == 'Rollback') {
                           echo 'TEST server is rollback'
                   } else if (userInput == 'Deploy to Production Environment') {
  	                    echo "Production server is updated"
                   	  
                }
              }
            }
        }
    }
}
